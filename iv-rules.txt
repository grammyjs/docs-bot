~version: "2.1"
~allowed_origin: "https://grammy.dev"

# Define paths structures
?path: /((id|es|zh|uk|ru)/)?guide/.*
?path: /((id|es|zh|uk|ru)/)?advanced/.*
?path: /((id|es|zh|uk|ru)/)?plugins/.*
?path: /((id|es|zh|uk|ru)/)?resources/.*
?path: /((id|es|zh|uk|ru)/)?hosting/.*

# Title is always the only h1 element
@replace("#", ""): //h1
title:  //h1
site_name: "grammY docs"
channel: "@grammyjs_news"
body: //div[has-class("content-container")]

# Just gotta fix some spacing in code blocks ...
@replace("\n$", ""): //code
# ... and rewrite links to stay within IV ...
@replace("^/", "https://t.me/iv?rhash=d32ab671cec0eb&url=https%3A%2F%2Fgrammy.dev%2F"): //a/@href

# ... as well as adding anchors ...
$subheader: //h2
$subheader+: //h3
$subheader+: //h4
$subheader+: //h5
$subheader+: //h6

@wrap_inner(<span>): $subheader
@prepend(" "): $@
@before_el("./../self::span"): //a[has-class("header-anchor")]
@prepend("#"): $$
@set_attr(name, @href): $$

# ... and stripping leading hashes for anchor names ...
@replace("^#", ""): $$/@name

# We also fix prev/next links ...
@split_parent: //span[has-class("desc")]
@append(": "): $$

# ... and fix last updated time...
@append(@datetime): //time
@replace("T([0-9:]+).000Z", " $1 UTC"): //time

# ... and remove line numbers of code blocks.
@remove: //div[has-class("line-numbers")]

# Convert tip, warning, danger blocks to details ...
@replace_tag(<details>): //div[has-class("tip")]
@set_attr(open, 1): $$
@replace_tag(<details>): //div[has-class("warning")]
@set_attr(open, 1): $$
@replace_tag(<details>): //div[has-class("danger")]
@set_attr(open, 1): $$
@replace_tag(<details>): //div[has-class("details")]
@set_attr(open, 0): $$

# ... and set their title as title of <details> ...
@replace_tag(<summary>): //p[has-class("custom-block-title")]

# ... and add @data-language attribute to pre ...
@map( //div[span[has-class("lang")]] ) {
  @set_attr("data-language", $@/span[has-class("lang")]): $@//pre
}

# ... and remove unnecesarry elements.
@remove: //div[has-class("line-numbers-wrapper")]
@remove: //span[has-class("lang")]
@remove: //button[has-class("copy")]

# Group code blocks with their titles
@replace_tag(<details>): //div[has-class("blocks")]
@replace_tag(<summary>): //div[has-class("tabs")]/label

@detach: //details[has-class("blocks")]/div
@remove: //details[not(node() or normalize-space())]

@map( //details[has-class("blocks")] ) {
  $details: $@

  @prepend_to($@): (//div[has-class("tabs")]/summary)[position()<2]

  # ... open the code block if it's active.
  @if ( $details/div[has-class("active")] ) {
    @set_attr(open, 1): $details
  } 
}

# Move <img> from <p> to outside ...
@split_parent: //p/img
# ... and change webp image extensions to jpeg
@replace(".webp", ".jpeg"): //img[ends-with(@src, ".webp")]/@src
# ... and change svg image extensions to png
@replace(".svg", ".png"): //img[ends-with(@src, ".svg")]/@src

# ... and apply bold titles for of <details>.
@wrap_inner(<b>): //summary
