~version: "2.1"
~allowed_origin: "https://grammy.dev"

# Define paths structures
?path: /((id|es|zh|uk)/)?guide/.*
?path: /((id|es|zh|uk)/)?advanced/.*
?path: /((id|es|zh|uk)/)?plugins/.*
?path: /((id|es|zh|uk)/)?resources/.*
?path: /((id|es|zh|uk)/)?hosting/.*

# Title is always the only h1 element
@replace("#", ""): //h1
title:  //h1
site_name: "grammY Docs"
channel: "@grammyjs_news"

# Simply picking up main does most of the work
body: //main
# Just gotta fix some spacing in code blocks ...
@replace("\n$", ""): //code
# ... and rewrite links to stay within IV ...
@replace("^/", "https://t.me/iv?rhash=ca1d23e111bcad&url=https%3A%2F%2Fgrammy.dev%2F"): //a/@href
# ... as well as adding anchors ...
@set_attr(name, @href): //a[has-class("header-anchor")]
# ... and stripping leading hashes for anchor names ...
@replace("^#", ""): $$/@name
# ... along with "open in new window" hints from links ...
@remove: //a/span
# ... and adding data-language attribute to pre
@set_attr(data-language, @class): //pre
@replace("language-", ""): $$/@data-language

# We also fix prev/next links ...
@detach: //span[has-class("prev")] # same as: @detach: //span[has-class("next")]
@prepend("Previous page:"): $$
@prepend("Next page:"): //span[has-class("next")]
@prepend_to(//footer): //nav[has-class("page-nav")]
@after(<br>): $$
# ... and remove sr content and line number blocks ...
@remove: //span[has-class("sr-only")]
@remove: //div[has-class("line-numbers")]
# ...and remove open in new window icon text
@remove: //span[has-class("external-link-icon-sr-only")]

# Then, we group code-group-items with their titles:
# TypeScript > Code, JavasScript > Code
@replace_tag(<details>): //div[has-class("code-group-item")]
@replace_tag(<summary>): //ul[@class="code-group__ul"]/li

@map( //details[has-class("code-group-item")] ) {
  $details: $@
  @prepend_to($details): (//ul[@class="code-group__ul"]/summary)[position()<2]
  @if ($details[has-class("code-group-item__active")]) {
    @set_attr(open, 1): $details
  } 
}

# Convert tip, warning, danger blocks to details ...
@replace_tag(<details>): //div[has-class("tip")]
@set_attr(open, 1): $$
@replace_tag(<details>): //div[has-class("warning")]
@set_attr(open, 1): $$
@replace_tag(<details>): //div[has-class("danger")]
@set_attr(open, 1): $$

# ... and set their title as title of <details>.
@replace_tag(<summary>): //p[has-class("custom-container-title")]

# Move <img> from <p> to outside ...
@split_parent: //p/img
# ...and change webp image extensions to jpeg
@replace(".webp", ".jpeg"): //img[ends-with(@src, ".webp")]/@src

# ... and apply bold titles for of <details>.
@wrap_inner(<b>): //summary
